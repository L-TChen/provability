{-# OPTIONS --without-K --cubical #-}

open import Cubical.Data.Nat as РёЋ
  using (РёЋ; zero; suc)

open import Prelude
open import Algebra.PCA.Base

module Algebra.PCA.Combinator (­ЮЊљ : OPCA ­ЮЊЦ ­ЮЊц) where
open OpcaStr (str ­ЮЊљ)

open import Relation.Binary.Preorder

­Юљ╝рхЌ : Term 0
­Юљ╝рхЌ = кЏ ` 0
­ЮљЙрхЌ : Term 0
­ЮљЙрхЌ = кЏ кЏ ` 1

­ЮЉєрхЌ : Term 0
-- S = ╬╗ x. ╬╗ y. ╬╗ z. xz(yz)
­ЮЉєрхЌ = (кЏ кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0))

­Юљ╝aРЅ╝a : Рѕђ a Рєњ РЪд ­Юљ╝рхЌ РіЎ рхњ a РЪДРѓђ РЅ╝рхќ РЪд рхњ a РЪДРѓђ
­Юљ╝aРЅ╝a a = completeness (` 0) a []

­ЮљЙabРЅ╝a : Рѕђ a b
  Рєњ РЪд ­ЮљЙрхЌ РіЎ рхњ a РіЎ рхњ b РЪДРѓђ  РЅ╝рхќ РЪд рхњ a РЪДРѓђ
­ЮљЙabРЅ╝a a b = РЅ╝рхќ-isTransitive РЪд ­ЮљЙрхЌ РіЎ рхњ a РіЎ рхњ b РЪДРѓђ (РЪд (кЏ ` 1) РіЎ рхњ b РЪДРѓЂ a) РЪд рхњ a РЪДРѓђ KabРЅ╝╬╗xab ╬╗xabРЅ╝a
  where
    KabРЅ╝╬╗xab : РЪд (кЏ кЏ ` 1) РіЎ рхњ a РіЎ рхњ b РЪДРѓђ РЅ╝рхќ РЪд (кЏ ` 1) РіЎ рхњ b РЪДРѓЂ a
    KabРЅ╝╬╗xab = Рђб-respect-РЅ╝рхќ
      (РЪд кЏ кЏ ` 1 РЪД [] Рђб pure a) (pure b) (РЪд кЏ ` 1 РЪД (a Рѕи [])) (pure b)
      (completeness (кЏ ` 1) a []) ╬╗ _ Рєњ _ , (РЅ╝-isReflexive b)

    ╬╗xabРЅ╝a : РЪд (кЏ ` 1) РіЎ рхњ b РЪДРѓЂ a РЅ╝рхќ РЪд рхњ a РЪД (b Рѕи a Рѕи [])
    ╬╗xabРЅ╝a = completeness (` 1) b (a Рѕи [])

­ЮљЙРєЊ : РЪд ­ЮљЙрхЌ РЪДРѓђ РєЊ 
­ЮљЙРєЊ = truncElim (╬╗ _ Рєњ РЪд ­ЮљЙрхЌ РЪДРѓђ РєЊisProp) (╬╗ a Рєњ ­ЮљЙabРЅ╝a a a _ .fst .fst .fst) nonEmpty

-- TODO: Simplify the following & Fix _РЅ╝РЪе_РЪЕ_
SabcРЅ╝acbc : Рѕђ a b c Рєњ РЪд ­ЮЉєрхЌ РіЎ рхњ a РіЎ рхњ b РіЎ рхњ c РЪДРѓђ РЅ╝рхќ РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ
SabcРЅ╝acbc a b c =
  _РЅ╝РЪе_РЪЕ_ {РЪд (кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ b  РіЎ рхњ c РЪДРѓЂ a} {РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ} РЪд ­ЮЉєрхЌ РіЎ рхњ a РіЎ рхњ b РіЎ рхњ c РЪДРѓђ
  --
    (Рђб-respect-РЅ╝рхќ
      РЪд ­ЮЉєрхЌ РіЎ рхњ a РіЎ рхњ b РЪДРѓђ (pure c)
      (РЪд (кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ b РЪДРѓЂ a)  (pure c)
      (Рђб-respect-РЅ╝рхќ
        РЪд ­ЮЉєрхЌ РіЎ рхњ a РЪДРѓђ (pure b)
        (РЪд кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0) РЪДРѓЂ a) (pure b)
          (completeness (кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) _ _) (РЅ╝рхќ-isReflexive (pure b))) (РЅ╝рхќ-isReflexive (pure c)))
  --
  (_РЅ╝РЪе_РЪЕ_ {РЪд (кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ c РЪД (b Рѕи a Рѕи [])} {РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ} (РЪд (кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ b  РіЎ рхњ c РЪДРѓЂ a)
    (Рђб-respect-РЅ╝рхќ
      (РЪд (кЏ кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ b РЪДРѓЂ a) (pure c)
      (РЪд кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0) РЪД (b Рѕи a Рѕи [])) (pure c)
        (completeness (кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) _ _) (РЅ╝рхќ-isReflexive (pure c)))
  (_РЅ╝РЪе_РЪЕ_ {РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ} {РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ} (РЪд (кЏ ` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) РіЎ рхњ c РЪД (b Рѕи a Рѕи []))
    (completeness (` 2 РіЎ ` 0 РіЎ (` 1 РіЎ ` 0)) _ _)
  (РЪд рхњ a РіЎ рхњ c РіЎ (рхњ b РіЎ рхњ c) РЪДРѓђ РѕјРЅ╝)))
  where
    open РЅ╝-Reasoning РЅ╝рхќ-isPreorder
