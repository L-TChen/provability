{-# OPTIONS --without-K --cubical --guarded #-}

module Clock where 

open import Universes
open import Cubical.Foundations.Prelude

primitive
  primLockUniv : ๐คโ ฬ

postulate
  Cl   : ๐คโ ฬ
  k0   : Cl
  Tick : Cl โ primLockUniv

private
  variable
    A B : ๐ค ฬ
    k   : Cl

โน : Cl โ ๐ค ฬ โ ๐ค ฬ
โน k A = (@tick x : Tick k) โ A

โธ : (k : Cl) โ โน k (๐ค ฬ) โ ๐ค ฬ
โธ k A = (@tick x : Tick k) โ A x

infixr -1 โน-syntax

โน-syntax : (k : Cl) โ โน k (๐ค ฬ) โ ๐ค ฬ
โน-syntax k A = (@tick ฮฑ : Tick k) โ A ฮฑ

syntax โน-syntax k (ฮป ฮฑ โ e) = โน[ ฮฑ ๊ k ] e

postulate
  tick-irr : {k : Cl} (x : โน k A) โ โน[ ฮฑ ๊ k ] โน[ ฮฒ ๊ k ] x ฮฑ โก x ฮฒ

postulate
  dfix : (โน k A โ A) โ โน k A
  pfix : (f : โน k A โ A) โ dfix f โก (\ _ โ f (dfix f))

  force       : {A : Cl โ ๐ค ฬ}        โ (โ k โ โน k (A k)) โ โ k โ A k
  force-delay : {A : Cl โ ๐ค ฬ}        โ (f : โ k โ โน k (A k)) โ โ k โ โน[ ฮฑ ๊ k ] force f k โก f k ฮฑ
  delay-force : {A : Cl โ ๐ค ฬ}        โ (f : โ k โ A k)       โ โ k โ force (\ k ฮฑ โ f k) k โก f k
  force^      : {A : โ k โ โน k (๐ค ฬ)} โ (โ k โ โธ k (A k))     โ โ k โ force A k
-- No more postulates after this line.

next : A โ โน k A
next x _ = x

_โ_ : โน k (A โ B) โ โน k A โ โน k B
_โ_ f x a = f a (x a)

mapโน : (f : A โ B) โ โน k A โ โน k B
mapโน f x ฮฑ = f (x ฮฑ)

later-ext : {f g : โน k A} โ (โน[ ฮฑ ๊ k ] f ฮฑ โก g ฮฑ) โ f โก g
later-ext eq = \ i ฮฑ โ eq ฮฑ i

pfix' : (f : โน k A โ A) โ โน[ ฮฑ ๊ k ] dfix f ฮฑ โก f (dfix f)
pfix' f ฮฑ i = pfix f i ฮฑ

fix : (โน k A โ A) โ A
fix f = f (dfix f)

fix-eq : (f : โน k A โ A) โ fix f โก f (\ _ โ fix f)
fix-eq f = \ i โ  f (pfix f i)

delay : {A : Cl โ Set} โ (โ k โ A k) โ โ k โ โน k (A k)
delay a k _ = a k

Later-Alg[_]_ : Cl โ ๐ค ฬ โ ๐ค ฬ
Later-Alg[ k ] A = โน k A โ A
